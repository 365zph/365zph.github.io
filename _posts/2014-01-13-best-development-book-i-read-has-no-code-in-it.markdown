---
author: viviworld
comments: true
date: 2014-01-13 14:01:49+00:00
layout: post
link: http://www.labazhou.net/2014/01/best-development-book-i-read-has-no-code-in-it/
slug: best-development-book-i-read-has-no-code-in-it
title: 我读过的没有代码的、最好的开发书籍
wordpress_id: 168
categories:
- 职业
tags:
- python
- 团队
- 大师
---

Dave Hoover与Adewale Oshineye合著的的《[Apprenticeship Patterns](http://www.goodreads.com/book/show/5608045-apprenticeship-patterns)》【注1】是一本非常适合技术学徒的指导书。对于我来说，本书主旨是漫漫长路。如书中所言：“走漫漫长路的人不是那些冲刺数年然后耗尽精力的英雄------而是以可持续的步调移动数十年。”

下面是我摘录书中的句子：

精通比了解要难很多。能减轻你负担的方式是了解。

如果你担心目前的工作正在腐蚀你的大脑，那么很可能就是这样。

最好的学习途径就是和有共同目标的人呆在一起，并且他们要使用你想学习的技能。

“掌握合气道需要多长时间？”可能有个学生会问。“你想活多长时间？”是唯一值得尊敬的回答。

暴露你的无知。明天我需要看起来再愚蠢一些，并且对此感觉良好。保持安静，试着去猜正在发生的事情 是不尽如人意的。

就像马拉松跑步者会在训练过程中会拥有比较强壮的腿部肌肉，她并不是为了拥有强壮的腿才训练的；她训练的是跑步。类似的，有激情的开发者投入Python项目两年，就可以对Python有较深的理解，马拉松跑步者的强壮腿部肌肉只是一个收获，不是目的。

做最差的。宁为凤尾不为鸡头！和比你强的开发者在一起。找到一个实力强的团队，你在那儿是最差的一员，这样才有成长空间。

软件开发由两个主要活动构成：学习和交流。

你一直在用吸管慢慢地“喝”水。但是对于大多数软件开发者来说，在做学徒的时候，你必须用消防员的软管来“喝”水。扩大吸收新技术的能力对于学徒是关键、有时候是压倒一切的一步。你必须多加培训必要的技能，以足够吸收新技术，理解它，记住它，并应用它。

我们都从一些偶然的“玩具”程序中获益，当人为的限制出现时，我们才被迫将能力推向极限。

如果你坚持足够长时间，人们开始称你为“有经验的”，但是这不应该是目标。所有的经验代表着你已经能够生存下来了。它不能代表你学到的总量，仅仅代表你花费的时间。你的目标应该是变成有技能的人、而不是有经验的人。

软件不是一个产品，它是存储知识的媒介。因此，软件开发不是一个产品生产的活动，它是一个知识获取的活动。

有时候，工作最适合的工具和你最熟悉的工具是不同的。这时候，你不得不考虑你的生产力是不是比团队的生产力更重要。

做为一个天才，幸运、富有或有名气不会使你成为大师。它们对学徒是不必要的。软件开发涉及到的技能 和 以正向促进训练的方式传达技能的能力 是手艺的核心。

对于手艺人来说，挨饿是失败的；他应当靠他的手艺养活自己。

和大师一起工作是学习手艺的最好方法。

原文地址：[http://arasatasaygin.com/pages/best-development-book-I-read-has-no-code-in-it.html](http://arasatasaygin.com/pages/best-development-book-I-read-has-no-code-in-it.html)

注1：Apprenticeship Patterns（学徒模式）：[http://book.douban.com/subject/10737107/](http://book.douban.com/subject/10737107/)
